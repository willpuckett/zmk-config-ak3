/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

&spi0 {
	status = "okay";
	cs-gpios = <&gpio1 00 GPIO_ACTIVE_LOW>;

	shifter: 595@0 {
		compatible = "zmk,gpio-595";
		status = "okay";
		gpio-controller;
		spi-max-frequency = <200000>;
		reg = <0>;
		label = "4HC595";
		#gpio-cells = <2>;
		ngpios = <8>;
    };
};

/ {
	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <18>;
		rows = <5>;
		map = <
//	M0487 Apple Standard Keyboard II
RC(4,2) RC(2,6) RC(3,6) RC(4,6) RC(6,6) RC(5,6) RC(0,6) RC(0,0) RC(7,0) RC(7,6) RC(7,1) RC(0,1) RC(5,1) RC(6,1) RC(4,9) RC(3,9) RC(2,9) RC(1,9) 
RC(1,7) RC(2,7) RC(3,7) RC(4,7) RC(6,7) RC(5,7) RC(0,7) RC(7,7) RC(7,8) RC(0,8) RC(5,8) RC(6,8) RC(4,8) RC(3,2) RC(4,5) RC(3,5) RC(2,5) RC(1,5) 
RC(8,0) RC(1,3) RC(2,3) RC(3,3) RC(4,3) RC(6,3) RC(5,3) RC(0,3) RC(7,3) RC(4,1) RC(2,8) RC(1,8) RC(3,8) RC(7,5) RC(0,5) RC(5,5) RC(6,5) 
RC(8,4) RC(1,4) RC(2,4) RC(3,4) RC(4,4) RC(6,4) RC(5,4) RC(0,4) RC(7,4) RC(3,1) RC(2,1) RC(8,4) RC(7,9) RC(0,9) RC(5,9) 
RC(8,1) RC(8,2) RC(8,3) RC(1,2) RC(1,6) RC(2,2) RC(7,2) RC(5,2) RC(1,1) RC(0,2) RC(6,2) RC(6,9) 
		>;
	};

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        label = "KSCAN0";
        rows = <9>;
        columns = <10>;

        // Include the matrix driver
        matrix {
            kscan = <&kscan1>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan2>;
            row-offset = <8>;
        };
    };

    kscan1: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        // Pins 7,13,14,16,19,20,21,22,23,24 are GPIO Columns
        col-gpios
            = <&shifter 7 GPIO_ACTIVE_LOW> 
            , <&shifter 6 GPIO_ACTIVE_LOW>
            , <&shifter 5 GPIO_ACTIVE_LOW>
            , <&gpio1 6 GPIO_ACTIVE_LOW>
            , <&shifter 1 GPIO_ACTIVE_LOW>
            , <&shifter 4 GPIO_ACTIVE_LOW> 
            , <&shifter 2 GPIO_ACTIVE_LOW>
            , <&gpio0 2 GPIO_ACTIVE_LOW>
            , <&shifter 8 GPIO_ACTIVE_LOW>
            , <&shifter 3 GPIO_ACTIVE_LOW>
            ;
        // Pins 1,2,3,4,5,15,17,18 are GPIO Rows active-low, pull high
        row-gpios
            = <&gpio0 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1 13 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio1 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

    kscan2: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
		label = "KSCAN";
        // Pins 8,9,10,11,12 are GPIO-direct pins active-low, pull high
		input-gpios
		= <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&gpio0 31 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&gpio0 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&gpio0 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		;
    };	

};
