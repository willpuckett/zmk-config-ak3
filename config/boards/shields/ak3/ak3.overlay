/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {

	chosen {
		zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <18>;
		rows = <5>;
		map = <
//	M0487 Apple Standard Keyboard II
//	                    +-------+
//	                    | power |
//	                    +-------+
//	| ` 	| 1 	| 2 	| 3 	| 4 	| 5 	| 6 	| 7 	| 8 	| 9 	| 0 	| - 	| = 	| bks 	| |clr	| = 	| / 	| * 	|
	RC(0,0)	RC(0,1)	RC(0,2)	RC(0,3)	RC(0,4)	RC(0,5)	RC(0,6)	RC(0,7)	RC(0,8)	RC(0,9)	RC(0,10) RC(0,11) RC(0,12) RC(0,13)	RC(0,14) RC(0,15) RC(0,16) RC(0,17)
//	| tab 	| q 	| w 	| e 	| r 	| t 	| y 	| u 	| i 	| o 	| p 	| [ 	| ] 	| \ 	| | 7 	| 8 	| 9 	| + 	|
	RC(1,0)	RC(1,1)	RC(1,2)	RC(1,3)	RC(1,4)	RC(1,5)	RC(1,6)	RC(1,7)	RC(1,8)	RC(1,9)	RC(1,10) RC(1,11) RC(1,12) RC(1,13)	RC(1,14) RC(1,15) RC(1,16) RC(1,17)
//	| caps 	| a 	| s 	| d 	| f 	| g 	| h 	| j 	| k 	| l 	| ; 	| ' 	|	return		| | 4 	| 5 	| 6 	| - 	|
	RC(2,0)	RC(2,1)	RC(2,2)	RC(2,3)	RC(2,4)	RC(2,5)	RC(2,6)	RC(2,7)	RC(2,8)	RC(2,9)	RC(2,10) RC(2,11) RC(2,12) RC(2,13)	RC(2,14) RC(2,15) RC(2,16) RC(2,17)
//	| shift  | z 	| x 	| c 	| v 	| b 	| n 	| m 	| , 	| . 	| / 	| 	 shift 				| | 1 	| 2 	| 3 	|   	|
	RC(3,0)	RC(3,1)	RC(3,2)	RC(3,3)	RC(3,4)	RC(3,5)	RC(3,6)	RC(3,7)	RC(3,8)	RC(3,9)	RC(3,10) RC(3,11) RC(3,12) RC(3,13)	RC(3,14) RC(3,15) RC(3,16) RC(3,17)
//	|ctrl	|opt	|comnd 	|  					space			 	| esc 	|lef	|rig	|dwn	|up 				| |   0   		|	 . 	|   	|
	RC(4,0)	RC(4,1)	RC(4,2)			RC(4,3)							RC(4,4)	RC(4,5)	RC(4,6)	RC(4,7)	RC(4,8)					RC(4,9)		RC(4,10)  RC(4,11) 
//	
		>;
	};

    kscan0: kscan_composite {
        compatible = "zmk,kscan-composite";
        label = "KSCAN0";
        rows = <4>;
        columns = <3>;

        // Include the matrix driver
        matrix {
            kscan = <&kscan1>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan2>;
            row-offset = <5>; // ...and shift it to not overlap
        };
    };

    kscan1: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        col-gpios
            = <&pro_micro 15 GPIO_ACTIVE_LOW>
            , <&pro_micro 14 GPIO_ACTIVE_LOW>
            , <&pro_micro 16 GPIO_ACTIVE_LOW>
            ;

        row-gpios
            = <&pro_micro 19 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&pro_micro 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&pro_micro 21 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

    kscan2: kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        // define 2 direct GPIOs here...
		label = "KSCAN";
		input-gpios
		= <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 14 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 5 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 15 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 4 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		, <&pro_micro 1 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
		;
    };	

};
